{"version":3,"sources":["createMaterialTopTabNavigator.tsx"],"names":["MaterialTopTabNavigator","id","initialRouteName","backBehavior","children","screenListeners","screenOptions","restWithDeprecated","swipeEnabled","lazy","lazyPlaceholder","lazyPreloadDistance","tabBarOptions","rest","defaultScreenOptions","Object","assign","tabBarActiveTintColor","activeTintColor","tabBarInactiveTintColor","inactiveTintColor","tabBarPressColor","pressColor","tabBarPressOpacity","pressOpacity","tabBarShowLabel","showLabel","tabBarShowIcon","showIcon","tabBarAllowFontScaling","allowFontScaling","tabBarBounces","bounces","tabBarScrollEnabled","scrollEnabled","tabBarIconStyle","iconStyle","tabBarLabelStyle","labelStyle","tabBarItemStyle","tabStyle","tabBarBadge","renderBadge","tabBarIndicator","renderIndicator","tabBarIndicatorStyle","indicatorStyle","tabBarIndicatorContainerStyle","indicatorContainerStyle","tabBarContentContainerStyle","contentContainerStyle","tabBarStyle","style","keys","forEach","key","undefined","JSON","stringify","deprecatedProps","entries","propName","propValue","toLowerCase","state","descriptors","navigation","NavigationContent","TabRouter"],"mappings":"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","sourcesContent":["import {\n  createNavigatorFactory,\n  DefaultNavigatorOptions,\n  ParamListBase,\n  TabActionHelpers,\n  TabNavigationState,\n  TabRouter,\n  TabRouterOptions,\n  useNavigationBuilder,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport warnOnce from 'warn-once';\n\nimport type {\n  MaterialTopTabNavigationConfig,\n  MaterialTopTabNavigationEventMap,\n  MaterialTopTabNavigationOptions,\n} from '../types';\nimport MaterialTopTabView from '../views/MaterialTopTabView';\n\ntype Props = DefaultNavigatorOptions<\n  ParamListBase,\n  TabNavigationState<ParamListBase>,\n  MaterialTopTabNavigationOptions,\n  MaterialTopTabNavigationEventMap\n> &\n  TabRouterOptions &\n  MaterialTopTabNavigationConfig;\n\nfunction MaterialTopTabNavigator({\n  id,\n  initialRouteName,\n  backBehavior,\n  children,\n  screenListeners,\n  screenOptions,\n  ...restWithDeprecated\n}: Props) {\n  const {\n    // @ts-expect-error: swipeEnabled is deprecated\n    swipeEnabled,\n    // @ts-expect-error: lazy is deprecated\n    lazy,\n    // @ts-expect-error: lazyPlaceholder is deprecated\n    lazyPlaceholder,\n    // @ts-expect-error: lazyPreloadDistance is deprecated\n    lazyPreloadDistance,\n    // @ts-expect-error: tabBarOptions is deprecated\n    tabBarOptions,\n    ...rest\n  } = restWithDeprecated;\n\n  let defaultScreenOptions: MaterialTopTabNavigationOptions = {};\n\n  if (tabBarOptions) {\n    Object.assign(defaultScreenOptions, {\n      tabBarActiveTintColor: tabBarOptions.activeTintColor,\n      tabBarInactiveTintColor: tabBarOptions.inactiveTintColor,\n      tabBarPressColor: tabBarOptions.pressColor,\n      tabBarPressOpacity: tabBarOptions.pressOpacity,\n      tabBarShowLabel: tabBarOptions.showLabel,\n      tabBarShowIcon: tabBarOptions.showIcon,\n      tabBarAllowFontScaling: tabBarOptions.allowFontScaling,\n      tabBarBounces: tabBarOptions.bounces,\n      tabBarScrollEnabled: tabBarOptions.scrollEnabled,\n      tabBarIconStyle: tabBarOptions.iconStyle,\n      tabBarLabelStyle: tabBarOptions.labelStyle,\n      tabBarItemStyle: tabBarOptions.tabStyle,\n      tabBarBadge: tabBarOptions.renderBadge,\n      tabBarIndicator: tabBarOptions.renderIndicator,\n      tabBarIndicatorStyle: tabBarOptions.indicatorStyle,\n      tabBarIndicatorContainerStyle: tabBarOptions.indicatorContainerStyle,\n      tabBarContentContainerStyle: tabBarOptions.contentContainerStyle,\n      tabBarStyle: tabBarOptions.style,\n    });\n\n    (\n      Object.keys(\n        defaultScreenOptions\n      ) as (keyof MaterialTopTabNavigationOptions)[]\n    ).forEach((key) => {\n      if (defaultScreenOptions[key] === undefined) {\n        // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n        delete defaultScreenOptions[key];\n      }\n    });\n\n    warnOnce(\n      tabBarOptions,\n      `Material Top Tab Navigator: 'tabBarOptions' is deprecated. Migrate the options to 'screenOptions' instead.\\n\\nPlace the following in 'screenOptions' in your code to keep current behavior:\\n\\n${JSON.stringify(\n        defaultScreenOptions,\n        null,\n        2\n      )}\\n\\nSee https://reactnavigation.org/docs/material-top-tab-navigator#options for more details.`\n    );\n  }\n\n  const deprecatedProps = {\n    swipeEnabled,\n    lazy,\n    lazyPlaceholder,\n    lazyPreloadDistance,\n  } as const;\n\n  Object.entries(deprecatedProps).forEach(([propName, propValue]) => {\n    if (propValue !== undefined) {\n      // @ts-expect-error: Object.entries doesn't return strict types\n      defaultScreenOptions[propName] = propValue;\n\n      warnOnce(\n        true,\n        `Material Top Tab Navigator: '${propName}' in props is deprecated. Move it to 'screenOptions' instead.\\n\\nSee https://reactnavigation.org/docs/material-top-tab-navigator#${propName.toLowerCase()} for more details.`\n      );\n    }\n  });\n\n  const { state, descriptors, navigation, NavigationContent } =\n    useNavigationBuilder<\n      TabNavigationState<ParamListBase>,\n      TabRouterOptions,\n      TabActionHelpers<ParamListBase>,\n      MaterialTopTabNavigationOptions,\n      MaterialTopTabNavigationEventMap\n    >(TabRouter, {\n      id,\n      initialRouteName,\n      backBehavior,\n      children,\n      screenListeners,\n      screenOptions,\n      defaultScreenOptions,\n    });\n\n  return (\n    <NavigationContent>\n      <MaterialTopTabView\n        {...rest}\n        state={state}\n        navigation={navigation}\n        descriptors={descriptors}\n      />\n    </NavigationContent>\n  );\n}\n\nexport default createNavigatorFactory<\n  TabNavigationState<ParamListBase>,\n  MaterialTopTabNavigationOptions,\n  MaterialTopTabNavigationEventMap,\n  typeof MaterialTopTabNavigator\n>(MaterialTopTabNavigator);\n"]}